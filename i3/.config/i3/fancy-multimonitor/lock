#!/bin/bash
# All options are here: http://www.imagemagick.org/Usage/blur/#blur_args
BLURTYPE="0x8"
BLURTYPE="5x3"

DISPLAY_RE="([0-9]+)x([0-9]+)\\+([0-9]+)\\+([0-9]+)"
IMAGE_RE="([0-9]+)x([0-9]+)"
FOLDER=`dirname "$BASH_SOURCE"`
IMGFOLDER='/home/harsh/.config/i3/fancy-multimonitor/img'
# random="$(ls ${IMGFOLDER} | sort -R | tail -1)"
# LOCK="${IMGFOLDER}/${random}"
PHDCOMICS_ORIG='/home/harsh/Pictures/phdcomics.png'
PHDCOMICS='/home/harsh/Pictures/phdcomics_lock.png'
XKCD_ORIG='/home/harsh/Pictures/xkcd.png'
XKCD='/home/harsh/Pictures/xkcd_lock.png'
SMBC_ORIG='/home/harsh/Pictures/smbc.png'
SMBC='/home/harsh/Pictures/smbc_lock.png'
TEXT="$FOLDER/text.png"
PARAMS=""
OUTPUT_IMAGE="/tmp/i3lock.png"

#Take screenshot:
scrot -z $OUTPUT_IMAGE

# resize phdcomics
convert $PHDCOMICS_ORIG -resize 600 $PHDCOMICS
#Get dimensions of the lock image:
LOCK_IMAGE_INFO=`identify $PHDCOMICS`
# this is a regular expression extractor for image properties
[[ $LOCK_IMAGE_INFO =~ $IMAGE_RE ]]
# gets the width and height
PHD_IMAGE_WIDTH=${BASH_REMATCH[1]}
PHD_IMAGE_HEIGHT=${BASH_REMATCH[2]}

# resize xkcd
convert $XKCD_ORIG -resize 600 $XKCD
LOCK_IMAGE_INFO=`identify $XKCD`
[[ $LOCK_IMAGE_INFO =~ $IMAGE_RE ]]
XKCD_IMAGE_WIDTH=${BASH_REMATCH[1]}
XKCD_IMAGE_HEIGHT=${BASH_REMATCH[2]}

# resize smbc
convert $SMBC_ORIG -resize x600 $SMBC
LOCK_IMAGE_INFO=`identify $SMBC`
[[ $LOCK_IMAGE_INFO =~ $IMAGE_RE ]]
SMBC_IMAGE_WIDTH=${BASH_REMATCH[1]}
SMBC_IMAGE_HEIGHT=${BASH_REMATCH[2]}

#Get dimensions of the text image:
TEXT_IMAGE_INFO=`identify $TEXT`
[[ $TEXT_IMAGE_INFO =~ $IMAGE_RE ]]
TEXT_WIDTH=${BASH_REMATCH[1]}
TEXT_HEIGHT=${BASH_REMATCH[2]}

#Execute xrandr to get information about the monitors:
while read LINE
do
  #If we are reading the line that contains the position information:
  if [[ $LINE =~ $DISPLAY_RE ]]; then
    #Extract information and append some parameters to the ones that will be given to ImageMagick:
    WIDTH=${BASH_REMATCH[1]}
    HEIGHT=${BASH_REMATCH[2]}
    X=${BASH_REMATCH[3]}
    Y=${BASH_REMATCH[4]}
    POS_X=$(($X+$WIDTH/2+$PHD_IMAGE_WIDTH/2))
    POS_Y=$(($Y+$HEIGHT/2+$PHD_IMAGE_HEIGHT/2))

    PARAMS="$PARAMS '$PHDCOMICS' '-geometry' '+$POS_X+$POS_Y' '-composite'"

    POS_X=$(($X+$WIDTH/2+$XKCD_IMAGE_WIDTH/2))
    POS_Y=$(($Y+$HEIGHT/4-$XKCD_IMAGE_HEIGHT/2))
    PARAMS="$PARAMS '$XKCD' '-geometry' '+$POS_X+$POS_Y' '-composite'"

    POS_X=$(($X+$WIDTH/2-$SMBC_IMAGE_WIDTH/2))
    POS_Y=$(($Y+$HEIGHT/12))
    PARAMS="$PARAMS '$SMBC' '-geometry' '+$POS_X+$POS_Y' '-composite'"
  fi
done <<<"`xrandr`"

#Execute ImageMagick:
PARAMS="'$OUTPUT_IMAGE' '-level' '0%,100%,0.6' '-blur' '$BLURTYPE' $PARAMS '$OUTPUT_IMAGE'"
eval convert $PARAMS

#Write my tasklist on screen
TODAY="$(date +%Y-%m-%d)"
TASKLIST_DO=":::DO:::\n---------\n$(sqlite3 ~/.cache/zim/notebook-home_harsh_Dropbox_Notebooks_Journal/index.db 'select due, description from tasklist where open=1 and start<=date("'${TODAY}'") order by due asc, prio desc, start asc;')"
TASKLIST_DUE=":::DUE:::\n---------\n$(sqlite3 ~/.cache/zim/notebook-home_harsh_Dropbox_Notebooks_Journal/index.db 'select due, description from tasklist where open=1 and start>=date("'${TODAY}'") order by due asc, prio desc, start asc;')"
TASKLIST_OVERDUE=":::OVERDUE:::\n---------\n$(sqlite3 ~/.cache/zim/notebook-home_harsh_Dropbox_Notebooks_Journal/index.db 'select description from tasklist where open=1 and due<date("'${TODAY}'") order by due desc, prio desc')"

WEATHER="$(cat /tmp/weather)"

mogrify -format 'png' -fill white -undercolor '#00000095' -pointsize 14 -gravity NorthWest -font "Robot Mono" -annotate +10+10 "${WEATHER}\n\n${TASKLIST_DO}\n\n\n${TASKLIST_DUE}\n\n${TASKLIST_OVERDUE}" $OUTPUT_IMAGE

#Lock the screen:
i3lock -i $OUTPUT_IMAGE -t

#Remove the generated image:
rm $OUTPUT_IMAGE
